# 스택 문제임을 기억하자.

import sys
input = sys.stdin.readline

# 보드 크기
N = int(input())
# 빈 보드
MAP = [[0] * (N+1) for _ in range(N+1)]
# 사과 개수
A = int(input())
# 사과 위치
apple = [list(map(int, input().split())) for _ in range(A)]
# 이동 횟수
M = int(input())
# 이동 (시간, 위치) D오른쪽, L왼쪽
move = [list(input().split())for _ in range(M)]
# 우, 하, 좌, 상 D면 +1, L이면 -1
di = [0, 1, 0, -1]
dj = [1, 0, -1, 0]

# 현재 방향
d = 0

# 뱀 위치 (시작은 1,1), 스택은 현재 뱀이 있는 공간이다.
snake = []
snake.append([1, 1])

# 1에는 뱀이 있음
MAP[1][1] = 1

# 사과 놓기 3에는 사과
for i in range(A):
    MAP[apple[i][0]][apple[i][1]] = 3
# 시간
time = 0
# 움직일 곳
ni, nj = 1, 1
# 방향을 틀기 위한 변수
m = 0

while (True):
    time += 1
    ni = ni + di[d]
    nj = nj + dj[d]

    # 범위 벗어나거나 자기면 종료(종료조건)
    if ni < 1 or ni > N or nj < 1 or nj > N or MAP[ni][nj] == 1:
        break

    # 다음 자리에 사과면 스네이크 스택에 추가하고, 맵에도 1 추가
    if MAP[ni][nj] == 3:
        snake.append([ni, nj])
        MAP[ni][nj] = 1

    # 다음 자리에 아무것도 없으면 추가하고, 맵에도 1 추가
    elif MAP[ni][nj] == 0:
        snake.append([ni, nj])
        MAP[ni][nj] = 1
        # 스네이크 끝에 있었던 자리 맵 0으로 변경경
        deli, delj = snake.pop(0)
        MAP[deli][delj] = 0
    # 방향 바꾸기
    if m < M and time == int(move[m][0]) and str(move[m][1]) == 'D':
        d = (d+1) % 4
        m += 1
    elif m < M and time == int(move[m][0]) and str(move[m][1]) == 'L':
        d = (d+3) % 4
        m += 1

print(time)
